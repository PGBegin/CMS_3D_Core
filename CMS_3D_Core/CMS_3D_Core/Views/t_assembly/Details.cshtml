@model CMS_3D_Core.Models.EDM.t_assembly

@{
    ViewData["Title"] = "Details";
}




<div class="row">
    <div class="col-md-3"></div>


    <div class="col-md-6">
        <h1>Details</h1>

        <div>
            <h4>t_assembly</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.assy_name)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.assy_name)
                </dd>
            </dl>
        </div>
        <div>
            <a asp-action="Edit" asp-route-id="@Model.id_assy">Edit</a> |
            <a asp-action="Index">Back to List</a>
        </div>


        @await Component.InvokeAsync("InstanceList", new { id_assy = (Model ?? new CMS_3D_Core.Models.EDM.t_assembly() { id_assy = 0 }).id_assy })


        <div class="container">

            <div class="row">

                <div class="col-md-7">
                    <h2>@Html.DisplayFor(model => model.assy_name)</h2>

                    @*モデルの表示領域*@
                    <canvas id="model_screen">
                    </canvas>

                    <div class="progress" id="div_progressbar_modeldl">
                        <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" id="progressbar_modeldl"></div>
                    </div>
                    <hr />

                    <div id="control_panel_zone">
                    </div>

                    <hr />

                    @*表示用ビューならここにインストラクションの表示領域がある*@
                    <div id="preview_instruction_short_description"></div>

                </div>

            </div>

        </div>
    </div>
</div>


<script src="~/lib/three/three.js"></script>
<script src="~/lib/three/Loader/GLTFLoader.js"></script>
<script src="~/lib/three/Loader/OBJLoader.js"></script>
<script src="~/lib/three/Loader/MTLLoader.js"></script>
<script src="~/lib/three/OrbitControls.js"></script>
<script src="~/lib/marked/marked.js"></script>
<script src="~/js/tdarticle.js"></script>
<script src="~/js/GetScreenshotForUpload.js"></script>


<script type="text/javascript">


    var adarticle = new TDArticle();


    // ロード後に実行される処理
    window.onload = function () {
        'use strict';

        @*
        @{
            var obj = (new CMS_3D_Core.Models.EDM.t_article() { directional_light_intensity=1, directional_light_px=30, directional_light_py=30, directional_light_pz=30, ambient_light_intensity=1});
        }

        let str_url_prodobjectapi_base = "/ContentsOperatorApis/GetAssemblyObjectListOnlyInstance?";
        let str_url_prodobjectapi = str_url_prodobjectapi_base + new URLSearchParams({ id_assy: @Model.id_assy }).toString();



        let id_startinst = @((obj.t_instructions.OrderBy(m => m.display_order).FirstOrDefault() ?? new CMS_3D_Core.Models.EDM.t_instruction() { id_instruct = 0 }).id_instruct);


        let lint =@obj.directional_light_intensity;
        let lpx =@obj.directional_light_px;
        let lpy = @obj.directional_light_py;
        let lpz =@obj.directional_light_pz;
        let anbint = @obj.ambient_light_intensity;
        let _gammaOutput =@if(obj.gammaOutput==true){@Html.Raw("true;")} else{@Html.Raw("false;")};



        adarticle.is_mode_assy = true;
        adarticle.id_assy = @Model.id_assy;

        adarticle.is_edit_mode = false;
        adarticle.startup(lint, lpx, lpy, lpz, anbint, _gammaOutput, str_url_prodobjectapi, id_startinst);

            *@
        adarticle.id_assy = @Model.id_assy;
        adarticle.is_mode_assy = true;
        adarticle.is_edit_mode = false;
        adarticle.startup();
    }

    @*
    //指定されたIDのインストラクションを表示する
    function transition_instruction2(id_instruct) {
        adarticle.transition_instruction(id_instruct);
    }


            *@

</script>
