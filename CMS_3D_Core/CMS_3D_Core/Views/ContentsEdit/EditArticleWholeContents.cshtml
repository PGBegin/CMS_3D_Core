@model CMS_3D_Core.Models.EDM.t_article

@{
    ViewData["Title"] = "EditProductInstruction";
}

<link rel="stylesheet" href="~/css/annotation.css" />

<h1>@Html.DisplayFor(model => model.title)</h1>



<p class="text-info">
    @ViewBag.ResultMsg
</p>


<div class="row">

    <div class="col-md-5">

        <div id="annotations">
        </div>
        @*モデルの表示領域*@
        <canvas id="model_screen">
        </canvas>

        <div class="progress" id="div_progressbar_modeldl">
            <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" id="progressbar_modeldl"></div>
        </div>
        <hr />

        <div id="control_panel_zone">
        </div>

        <hr />

        @*表示用ビューならここにインストラクションの表示領域がある*@
        <div id="preview_instruction_short_description"></div>

    </div>


    <div class="col-md-6">
        <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                <a class="nav-link active" id="nav-instruction-tab" data-bs-toggle="tab" href="#nav-instruction">Instruction</a>
                <a class="nav-link" id="nav-preview-instruction-tab" data-bs-toggle="tab" href="#preview-instruction">Preview Instruction</a>
                <a class="nav-link" id="nav-home-tab" data-bs-toggle="tab" href="#nav-viewinfo">View</a>
                <a class="nav-link" id="nav-profile-tab" data-bs-toggle="tab" href="#nav-articlebase">Article Base</a>
                <a class="nav-link" id="nav-thumbnail-tab" data-bs-toggle="tab" href="#nav-thumbnail">Thumbnail</a>
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">

            <div class="tab-pane fade show active" id="nav-instruction">
                @await Component.InvokeAsync("EditProductInstruction", new { id_article = (Model ?? new CMS_3D_Core.Models.EDM.t_article() { id_article = 0 }).id_article })
            </div>

            <div class="tab-pane fade" id="preview-instruction">
            </div>



            <div class="tab-pane fade" id="nav-viewinfo">

                <h4> View Info and Edit</h4>

                @await Component.InvokeAsync("EditProductView", new { id_article = (Model ?? new CMS_3D_Core.Models.EDM.t_article() { id_article = 0 }).id_article })


                @await Component.InvokeAsync("ViewList", new { id_article = (Model ?? new CMS_3D_Core.Models.EDM.t_article() { id_article = 0 }).id_article })


                @Html.ActionLink("View", "Index", "t_view", new { id_article = (Model ?? new CMS_3D_Core.Models.EDM.t_article() { id_article = 0 }).id_article })


            </div>
            <div class="tab-pane fade" id="nav-articlebase">

                <h4> View Info and Edit</h4>

                @await Component.InvokeAsync("EditArticle", new { id_article = (Model ?? new CMS_3D_Core.Models.EDM.t_article() { id_article = 0 }).id_article })

            </div>
            <div class="tab-pane fade" id="nav-thumbnail">

                <h4>Thumbnail</h4>

                @await Component.InvokeAsync("EditThumbnail", new { id_article = (Model ?? new CMS_3D_Core.Models.EDM.t_article() { id_article = 0 }).id_article })


            </div>
        </div>

    </div>


</div>


<script src="~/lib/three/three.js"></script>
<script src="~/lib/three/Loader/GLTFLoader.js"></script>
<script src="~/lib/three/Loader/OBJLoader.js"></script>
<script src="~/lib/three/Loader/MTLLoader.js"></script>
<script src="~/lib/three/OrbitControls.js"></script>
<script src="~/lib/marked/marked.js"></script>
<script src="~/js/tdarticle.js"></script>
<script src="~/js/GetScreenshotForUpload.js"></script>


<script type="text/javascript">


    var adarticle = new TDArticle();


    // ロード後に実行される処理
    window.onload = function () {
        'use strict';

        @{
            var obj = (Model ?? new CMS_3D_Core.Models.EDM.t_article() { });
        }

        let str_url_prodobjectapi_base = "/ContentsOperatorApis/GetAssemblyObjectList?";
        let str_url_prodobjectapi = str_url_prodobjectapi_base + new URLSearchParams({ id_article: @obj.id_article }).toString();

        //let str_url_partapi_base = "/ContentsOperatorApis/GetPartObjectFile?";

        //const glfLoader = new THREE.GLTFLoader();

        let id_startinst = @((obj.t_instructions.OrderBy(m => m.display_order).FirstOrDefault() ?? new CMS_3D_Core.Models.EDM.t_instruction() { id_instruct = 0 }).id_instruct);


        let lint =@obj.directional_light_intensity;
        let lpx =@obj.directional_light_px;
        let lpy = @obj.directional_light_py;
        let lpz =@obj.directional_light_pz;
        let anbint = @obj.ambient_light_intensity;
        let _gammaOutput =@if(obj.gammaOutput==true){@Html.Raw("true;")} else{@Html.Raw("false;")};


        adarticle.id_article = @obj.id_article;
        adarticle.is_edit_mode = true;
        adarticle.startup(lint, lpx, lpy, lpz, anbint, _gammaOutput, str_url_prodobjectapi, id_startinst);


    }

    //指定されたIDのインストラクションを表示する
    function transition_instruction2(id_instruct) {
        adarticle.transition_instruction(id_instruct);
    }



</script>
